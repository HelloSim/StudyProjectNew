plugins {
    id 'com.android.application'
}

def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion
    defaultConfig {
        applicationId "com.sim.traveltool"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 28
        versionName "4.2.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {// 设置支持的SO库架构
            abiFilters 'armeabi', 'arm64-v8a'//, 'x86', 'armeabi-v7a', 'x86_64'
        }
        javaCompileOptions {//添加javaCompileOptions
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
        multiDexEnabled true
    }
    
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    signingConfigs {//签名文件
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    applicationVariants.all { variant ->//指定apk名称
        variant.outputs.all {
            outputFileName = "TravelTool${defaultConfig.versionName}.apk"
        }
    }

    buildTypes {//封装构建类型配置
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")
            minifyEnabled false //是否可以移出无用的java代码，默认为false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")
            minifyEnabled false //是否可以移出无用的java代码，默认为false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //指定插件使用的混淆文件
            signingConfig signingConfigs.release //签名配置文件
        }
    }

    compileOptions {//设置JDK1.8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation project(":baselibrary")

    //bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    //bmob
    implementation 'cn.bmob.android:bmob-sdk:3.7.8'
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.okio:okio:2.2.2'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'//下拉刷新控件
    implementation 'com.haibin:calendarview:3.4.6' //日历
    implementation 'com.github.huangyanbin:SmartTable:2.2.0'//表格
}